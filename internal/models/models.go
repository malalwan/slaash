package models

import (
	"time"
)

/* Store has the store info and important tokens and globals */
type Store struct {
	ID                  int       // PK
	Name                string    // abc.myshopify.com
	ApiToken            string    // Needed to call shopify API
	RefreshToken        string    // Needed to refresh the API token
	Misc                string    // Extra info about the store
	URL                 string    // store domain URL (www.abc.com)
	PopupColorCode      string    // configured on the deal list
	ButtonColorCode     string    // connfigured on the deal list
	DefaultDiscount     int8      // configured on discounts section
	DiscountCateogry    int8      // configured on the discounts section
	MaxDiscountforPopup int8      // this value will be used to lure on the popup
	ButtonStyle         int8      // configured on the deal list
	CampaginRenewalTime time.Time // only hour:min:sec matter
	CampaignTurnOffTime time.Time // add 1 day and then close camapaign for that day until renewal
	DealListActive      bool      // global deal list toggle
	Currency            string    // currency type for the store
}

/* User stores the information of the person accessing the dashboard */
type Users struct {
	FirstName   string    //
	LastName    string    //
	Email       string    //
	Password    string    // Set during shopify authorization
	AccessLevel int       // 1: (User), 2: (Admin)
	CreatedAt   time.Time // When onboarded
	UpdatedAt   time.Time // When profile edited
	Store       int       // FK ref to store for which the user registered (1-1 for now)
	Photo       string    // URL
	Misc        string    // extra info about the user
}

/* DiscountCode stores every discount code generated by Slaash */
type DiscountCode struct {
	ShopifyID   int64     // Id for shopify fetch
	Store       int       // Ref to store since ID not globally unique
	PriceRuleID int64     // Price rule used to create the discount
	Code        string    // Discount code string to be sent over channels
	Timestamp   time.Time // Update when the code is modified as well
}

/* Visitor stores the first moment of truth for a visitor who sees the deal list popup */
type Visitor struct {
	AnonymousID    string    // not pk
	Store          int       // Store details on which the deal list was clicked
	ProductId      int64     // Product ID of the product where the deal list was shown
	Timestamp      time.Time // OTF identification timestamp
	DiscountCode   int64     // discount code value generated for that visitor
	TimerInMinutes int8      // kitna minute ka window hai before checkout
	DealShown      bool      // deal list button dikha ya nahi
	DealClicked    bool      // Set when Buyer clicks obn deal list button
	CodeShown      bool      // code dikha ya nhi
	CodeCopied     bool      // Code copy kiya ya nahi
	Misc           string    // Extra info about the buyer
}

/* Checkout is populated at every checkout from Slaash discount coupons */
type Checkout struct {
	AnonymousID    string    // visitor id
	Store          int       // store ref
	ProductID      int64     // product ref
	GMV            int       // gmv driven by the product (final checkout value)
	DiscountAmount int       // disocunt amount given on the product
	DiscountCode   int64     // code that was applied on the product
	Timestamp      time.Time // checkout time
}

/* Product is populated when a discount is associated with it by the user */
type Product struct {
	ProductID          int64 // shopify product ID
	Store              int   // Store id we created
	DiscountPercentage int8  // number entered by the user
	DiscountCode       int64 // we generate this and attach id of the code here, can fetch code from shopify/our db
	Impressions        int64 // deal list impressions for each product, redundant but aggregated
}

/* CollectionDiscounts is used to store discount codes and inputs specific to collection type */
type Collection struct {
	Store              int   // store id
	CollectionID       int64 //check in shopify
	DiscountPercentage int8  // percentage configured
	DiscountCode       int64 // code that was applied
	Impressions        int64 // number of hits for each collection (aggregation makes sense here)
}
