package models

import (
	"time"

	goshopify "github.com/bold-commerce/go-shopify"
	"github.com/shopspring/decimal"
)

type Store struct {
	ID           int
	Name         string
	ApiToken     string
	RefreshToken string
	Misc         string
	URL          string
}

// User is the user model
type User struct {
	ID          int
	FirstName   string
	LastName    string
	Email       string
	Password    string
	AccessLevel int
	CreatedAt   *time.Time
	UpdatedAt   *time.Time
	Store       Store
}

type Campaign struct {
	CampaignID   int64      // autogen unique campaignID (PK)
	Store        Store      // store for which the campaign is set
	Timestamp    *time.Time // activation time of campaign (nothing if not)
	Discount     int        // overall discount in % of total price
	ActiveStatus int        // 1 : active, 2 : assigned, 3 : fulfilled(mail sent)
	Misc         string     // extra details if needed
}

// Structure that stores price
// rules created by slaash
type PriceRule struct {
	Title             string
	TargetType        string
	TargetSelection   string
	ValueType         string
	Value             *decimal.Decimal
	CustomerSelection string
	AllocationMethod  string
	StartsAt          *time.Time
}

// Structure that stores discount
// codes generated by slaash
type DiscountCode struct {
	ID          int64
	PriceRuleID int64
	Code        string
	UsageCount  int
	CreatedAt   *time.Time
	UpdatedAt   *time.Time
}

// Details of the Products added
// to the deal list cumulatively
type CampaignProduct struct {
	ID           int64             // auto gen PK
	CampaignID   int64             // FK to Campaign
	ProductID    int64             // Product ID of the given product (to fetch from shopify)
	Title        string            // product title for local storage
	Images       []goshopify.Image // product image list for seamless dahsboard display (linked, not stored)
	Store        Store             // easy access to the store for initiating connection to shopify
	Deals        int               // stores the number of deals on a specific product (init as 1)
	Sold         int               // number of campaign products sold (get from order data)
	DealDiscount int               // If a deal was given on the product or not
	EmailSentTo  []string          // List of emails who recieved the deal (till date)
	Misc         string            // Extra info whenever needed
	PriceRuleID  int64             // Price rule associated with the discount
}

// Structure to store email IDs when end
// user subscribes to deal list
type Buyer struct {
	AnonymousID int64      // PK
	Email       string     // Also Unique
	Store       Store      // Store details on which the deal list was clicked
	ProductId   int64      // Product ID of the product added to the deal list
	Timestamp   *time.Time // Subscription timestamp
	GotDeal     bool       // Initialized as false, unless campaign fulfilled
	ClickedDeal bool       // Initialized as false, set when Buyer clicks on checkout link
	CPID        int64      // FK to CampaignProduct DB where deals increment will happen
	Misc        string     // Extra info about the buyer
}
