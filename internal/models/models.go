package models

import (
	"time"

	"github.com/shopspring/decimal"
)

type Store struct {
	ID           int    // PK
	Name         string // abc.myshopify.com
	ApiToken     string // Needed to call shopify API
	RefreshToken string // Needed to refresh the API token
	Misc         string //
	URL          string // store domain URL (www.abc.com)
}

// User is the user model
type User struct {
	ID          int       // PK
	FirstName   string    //
	LastName    string    //
	Email       string    //
	Password    string    // Set during shopify authorization
	AccessLevel int       // 1: (User), 2: (Admin)
	CreatedAt   time.Time // When onboarded
	UpdatedAt   time.Time // When profile edited
	Store       Store     // FK ref to store for which the user registered (1-1 for now)
}

type Campaign struct {
	CampaignID   int64     // autogen unique campaignID (PK)
	Store        Store     // store for which the campaign is set
	Timestamp    time.Time // activation time of campaign (nothing if not)
	Discount     int       // overall discount in % of total price
	ActiveStatus int       // 1 : active, 2 : assigned(user has set), 3 : fulfilled(mail sent)
	Misc         string    // extra details if needed
}

// Structure that stores price
// rules created by slaash
type PriceRule struct {
	ID                string          // Id for our DB
	ShopifyID         int64           // Id for shopify fetch
	Store             Store           // Ref to store since not ID not globally unique
	Title             string          // Title for dahsboard visibility
	TargetType        string          // Useless till now
	TargetSelection   string          // Useless till now
	ValueType         string          // Uselless till now
	Value             decimal.Decimal // Value of the rule
	CustomerSelection string          // Bleh
	AllocationMethod  string          // Bleh
	StartsAt          time.Time       // TS when the rule is applied
}

// Structure that stores discount
// codes generated by slaash
type DiscountCode struct {
	ID          int64     // Id for our DB
	ShopifyID   int64     // Id for shopify fetch
	Store       Store     // Ref to store since not ID not globally unique
	PriceRuleID int64     // Price rule used to create the discount
	Code        string    // Discount code string to be sent over channels
	UsageCount  int       // Update when code is used during checkout
	Timestamp   time.Time // Update when the code is modified as well
}

// Details of the Products added
// to the deal list cumulatively
type CampaignProduct struct {
	ID           int64     // auto gen PK
	CampaignID   int64     // FK to Campaign
	ProductID    int64     // Product ID of the given product (to fetch from shopify)
	Title        string    // Product title for local storage (store during creation)
	Images       []string  // Product images list for seamless dahsboard display (linked, not stored)
	Store        Store     // Easy access to the store for initiating connection to shopify
	Deals        int       // Stores the number of deals on a specific product (init as 1)
	Sold         int       // Number of campaign products sold (get from order data)
	DealDiscount int       // Discount value on that product
	EmailSentTo  []string  // List of emails who recieved the deal (till date)
	Misc         string    // Extra info whenever needed
	PriceRuleID  int64     // Price rule associated with the discount
	Timestamp    time.Time // Time when the campaign product was added to a campaign
	Price        int       // Price without discount
}

// Structure to store email IDs when end
// user subscribes to deal list
type Buyer struct {
	AnonymousID int64     // PK
	Email       string    // Also Unique
	Store       Store     // Store details on which the deal list was clicked
	ProductId   int64     // Product ID of the product added to the deal list
	Timestamp   time.Time // Subscription timestamp
	GotDeal     bool      // Initialized as false, unless campaign fulfilled
	ClickedDeal bool      // Set when Buyer clicks on checkout link
	CPID        int64     // FK to CampaignProduct DB where deals increment will happen
	Misc        string    // Extra info about the buyer
	MailSent    bool      // Set if the mail was sent after getting deal
	Purchased   bool      // Set when a purchase was made using the sent discount code
	OpenedMail  bool      // Set when the mail is opened
}
